// <auto-generated />
using System;
using AngularTask.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AngularTask.Migrations
{
    [DbContext(typeof(ContentDbContext))]
    [Migration("20230304174920_AddContentItemSeedData")]
    partial class AddContentItemSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("AngularTask.Models.Content", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DownloadUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "This is a sample content.",
                            DownloadUrl = "https://example.com/sample-content-1.pdf",
                            Title = "Sample Content 1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "This is another sample content.",
                            DownloadUrl = "https://example.com/sample-content-2.pdf",
                            Title = "Sample Content 2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "This is yet another sample content.",
                            DownloadUrl = "https://example.com/sample-content-3.pdf",
                            Title = "Sample Content 3"
                        });
                });

            modelBuilder.Entity("AngularTask.Models.ContentItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DownloadCount")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThumbnailUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ContentItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 3, 4, 21, 49, 20, 142, DateTimeKind.Local).AddTicks(7115),
                            Description = "This is the first item.",
                            DownloadCount = 0,
                            ImageUrl = "https://example.com/image1.jpg",
                            ThumbnailUrl = "https://example.com/thumb1.jpg",
                            Title = "First Item",
                            UpdatedAt = new DateTime(2023, 3, 4, 21, 49, 20, 144, DateTimeKind.Local).AddTicks(2040)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 3, 4, 21, 49, 20, 144, DateTimeKind.Local).AddTicks(2578),
                            Description = "This is the second item.",
                            DownloadCount = 0,
                            ImageUrl = "https://example.com/image2.jpg",
                            ThumbnailUrl = "https://example.com/thumb2.jpg",
                            Title = "Second Item",
                            UpdatedAt = new DateTime(2023, 3, 4, 21, 49, 20, 144, DateTimeKind.Local).AddTicks(2584)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 3, 4, 21, 49, 20, 144, DateTimeKind.Local).AddTicks(2589),
                            Description = "This is the third item.",
                            DownloadCount = 0,
                            ImageUrl = "https://example.com/image3.jpg",
                            ThumbnailUrl = "https://example.com/thumb3.jpg",
                            Title = "Third Item",
                            UpdatedAt = new DateTime(2023, 3, 4, 21, 49, 20, 144, DateTimeKind.Local).AddTicks(2591)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
